package com.arabBank.Threads.Test;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class TestThread implements Callable<String>{

   public static void main(final String[] arguments) throws InterruptedException, ExecutionException {

      ExecutorService executor = Executors.newSingleThreadExecutor();


      Future<String> result10 = executor.submit();


      Future<String> result20 = executor.submit();

      String read ;


      String write ;


      executor.shutdown();
   }  

   public static Future<String> readFileAsString(String fileName)throws Exception 
   { 
     String data = ""; 
     data = new String(Files.readAllBytes(Paths.get(fileName))); 
     return "asd"; 
   } 
   public String readFile(String path) throws IOException {
	   
      String line=null;
      int x=0;
	try {
		 FileReader fileReader =
                 new FileReader(path);

         BufferedReader bufferedReader =
                 new BufferedReader(fileReader);

         for (int check = 0; check <= x; check++) {

             line = bufferedReader.readLine();
         }
         if (line == null) {
             x = -1;
         } else {
             System.out.println(line);

             x++;
         }

         bufferedReader.close();
	} catch (FileNotFoundException e) {
		e.printStackTrace();
	}
	return null;
      

      
	
	}
	

   public String call() throws Exception {
	   String result =readFile("");
	   return null;
	}
}