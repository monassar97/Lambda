import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Queue;
public class TestC {
	static Queue<Integer>queue1=new PriorityQueue<Integer>();
	static Queue<Integer>queue2=new PriorityQueue<Integer>();

	public static void add(int value) {
		if(queue1.size()==queue2.size()||queue1.size()==(queue2.size()+1)) {
			queue1.add(value);
			System.out.println("peek "+queue1.peek());
		}else if(queue1.size()>queue2.size()){
			queue1.add(value);
			queue2.add(queue1.poll());
			System.out.println("peek "+queue2.peek());
		}
	}
	public static void getMedian() {
		
	}
	public static void main(String[] args) {
		add(1);
		add(2);
		add(3);
		add(4);
		add(5);
		add(6);
		
		queue1.stream().forEach(System.out::println);
		queue2.stream().forEach(System.out::println);

	}
}
