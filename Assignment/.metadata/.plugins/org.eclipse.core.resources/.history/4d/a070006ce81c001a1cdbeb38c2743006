import java.util.PriorityQueue;
import java.util.Queue;
public class TestC {
	static Queue<Integer>queue1=new PriorityQueue<Integer>((x,y)->x-y);
	static Queue<Integer>queue2=new PriorityQueue<Integer>((x,y)->y-x);

	public static void add(int value) {
		if(queue1.size()==queue2.size()) {
			queue1.add(value);

		}else if(queue1.size()>queue2.size()){
			queue1.add(value);
			queue2.add(queue1.poll());

		}
	}
	public static void getMedian() {
		if((queue1.size()+queue2.size()%2)==0) {
		System.out.println((queue1.peek()+queue2.peek())/2);
		System.out.println(queue1.peek());
		System.out.println(queue2.peek());
		System.out.println("even");
		
		}
		else {
			System.out.println(queue1.peek());
		}
	}
	public static void main(String[] args) {
		
		add(1);
		add(2);
		add(3);
		add(4);
		add(5);
		add(6);
		add(7);
		add(8);

		queue1.stream().forEach(System.out::println);
		System.out.println("----------------");
		queue2.stream().forEach(System.out::println);
		System.out.println("----------------");
		getMedian();

	}
}